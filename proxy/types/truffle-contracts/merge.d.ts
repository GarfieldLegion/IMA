/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

/// <reference types="truffle-typings" />

import * as TruffleContracts from ".";

declare global {
  namespace Truffle {
    interface Artifacts {
      require(
        name: "ContractManager"
      ): TruffleContracts.ContractManagerContract;
      require(
        name: "ContractReceiver"
      ): TruffleContracts.ContractReceiverContract;
      require(name: "DepositBox"): TruffleContracts.DepositBoxContract;
      require(name: "ERC165"): TruffleContracts.ERC165Contract;
      require(name: "ERC20"): TruffleContracts.ERC20Contract;
      require(name: "ERC20Capped"): TruffleContracts.ERC20CappedContract;
      require(name: "ERC20Clone"): TruffleContracts.ERC20CloneContract;
      require(name: "ERC20Detailed"): TruffleContracts.ERC20DetailedContract;
      require(name: "ERC20Mintable"): TruffleContracts.ERC20MintableContract;
      require(
        name: "ERC20MintAndBurn"
      ): TruffleContracts.ERC20MintAndBurnContract;
      require(name: "ERC20Module"): TruffleContracts.ERC20ModuleContract;
      require(
        name: "ERC20ModuleForMainnet"
      ): TruffleContracts.ERC20ModuleForMainnetContract;
      require(
        name: "ERC20ModuleForSchain"
      ): TruffleContracts.ERC20ModuleForSchainContract;
      require(name: "ERC20OnChain"): TruffleContracts.ERC20OnChainContract;
      require(name: "ERC721"): TruffleContracts.ERC721Contract;
      require(
        name: "ERC721Enumerable"
      ): TruffleContracts.ERC721EnumerableContract;
      require(name: "ERC721Full"): TruffleContracts.ERC721FullContract;
      require(name: "ERC721Metadata"): TruffleContracts.ERC721MetadataContract;
      require(
        name: "ERC721MetadataMintable"
      ): TruffleContracts.ERC721MetadataMintableContract;
      require(
        name: "ERC721MintAndBurn"
      ): TruffleContracts.ERC721MintAndBurnContract;
      require(
        name: "ERC721ModuleForMainnet"
      ): TruffleContracts.ERC721ModuleForMainnetContract;
      require(
        name: "ERC721ModuleForSchain"
      ): TruffleContracts.ERC721ModuleForSchainContract;
      require(name: "ERC721OnChain"): TruffleContracts.ERC721OnChainContract;
      require(name: "EthERC20"): TruffleContracts.EthERC20Contract;
      require(name: "IERC165"): TruffleContracts.IERC165Contract;
      require(name: "IERC20"): TruffleContracts.IERC20Contract;
      require(name: "IERC20Module"): TruffleContracts.IERC20ModuleContract;
      require(name: "IERC721"): TruffleContracts.IERC721Contract;
      require(
        name: "IERC721Enumerable"
      ): TruffleContracts.IERC721EnumerableContract;
      require(name: "IERC721Full"): TruffleContracts.IERC721FullContract;
      require(
        name: "IERC721Metadata"
      ): TruffleContracts.IERC721MetadataContract;
      require(name: "IERC721Module"): TruffleContracts.IERC721ModuleContract;
      require(
        name: "IERC721Receiver"
      ): TruffleContracts.IERC721ReceiverContract;
      require(name: "IETHERC20"): TruffleContracts.IETHERC20Contract;
      require(name: "ILockAndDataDB"): TruffleContracts.ILockAndDataDBContract;
      require(
        name: "ILockAndDataERC20M"
      ): TruffleContracts.ILockAndDataERC20MContract;
      require(
        name: "ILockAndDataERC20S"
      ): TruffleContracts.ILockAndDataERC20SContract;
      require(
        name: "ILockAndDataERC721M"
      ): TruffleContracts.ILockAndDataERC721MContract;
      require(
        name: "ILockAndDataERC721S"
      ): TruffleContracts.ILockAndDataERC721SContract;
      require(name: "ILockAndDataTM"): TruffleContracts.ILockAndDataTMContract;
      require(name: "IMessageProxy"): TruffleContracts.IMessageProxyContract;
      require(
        name: "ITokenFactoryForERC20"
      ): TruffleContracts.ITokenFactoryForERC20Contract;
      require(
        name: "ITokenFactoryForERC721"
      ): TruffleContracts.ITokenFactoryForERC721Contract;
      require(
        name: "LockAndDataERC20"
      ): TruffleContracts.LockAndDataERC20Contract;
      require(
        name: "LockAndDataForMainnet"
      ): TruffleContracts.LockAndDataForMainnetContract;
      require(
        name: "LockAndDataForMainnetERC20"
      ): TruffleContracts.LockAndDataForMainnetERC20Contract;
      require(
        name: "LockAndDataForMainnetERC721"
      ): TruffleContracts.LockAndDataForMainnetERC721Contract;
      require(
        name: "LockAndDataForSchain"
      ): TruffleContracts.LockAndDataForSchainContract;
      require(
        name: "LockAndDataForSchainERC20"
      ): TruffleContracts.LockAndDataForSchainERC20Contract;
      require(
        name: "LockAndDataForSchainERC721"
      ): TruffleContracts.LockAndDataForSchainERC721Contract;
      require(name: "MessageProxy"): TruffleContracts.MessageProxyContract;
      require(name: "Migrations"): TruffleContracts.MigrationsContract;
      require(name: "MinterRole"): TruffleContracts.MinterRoleContract;
      require(name: "Ownable"): TruffleContracts.OwnableContract;
      require(name: "Permissions"): TruffleContracts.PermissionsContract;
      require(name: "TokenFactory"): TruffleContracts.TokenFactoryContract;
      require(name: "TokenManager"): TruffleContracts.TokenManagerContract;
    }
  }
}
