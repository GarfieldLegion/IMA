# This is a basic workflow to help you get started with Actions

name: Build and test

# Controls when the action will run. Triggers the workflow on push or pull request 
# events but only for the master branch
on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: VERSION_CHECKS
      run: |
        echo ------------ sys
        uname -a
        echo ------------ node
        node --version
        echo ------------ npm
        npm --version

    - name: INSTALL PREREQUISITES - PY
      run: |
        sudo apt-get install python3-pip python3-setuptools
        pip3 install slither-analyzer

    - name: INSTALL PREREQUISITES - PROXY - COPY SCRIPTS
      run: |
        cd proxy
        bash ./scripts/copy.sh
        cd ..

    - name: INSTALL PREREQUISITES - PROXY - PACKAGES
      run: |
        cd proxy
        echo ------------ yarn pass
        yarn install
        echo ------------ npx version check
        npx --version
        echo ------------ buidler version check
        npx buidler --version
        cd ..

    - name: INSTALL PREREQUISITES - AGENT - PACKAGES
      run: |
        cd agent 
        npm install
        cd ..

    - name: INSTALL PREREQUISITES - SKALE-IMA - PACKAGES
      run: |
        cd npms/skale-ima
        npm install
        cd ../..

    - name: START BACKGROUND GANACHE
      run: |
        npx ganache-cli --gasLimit 8000000 --quiet --acctKeys ../test/accounts.json &

    - name: PROXY - LINT
      run: |
        cd proxy
        yarn lint #|| travis_terminate 1
        cd ..

    - name: PROXY - SLITHER
        cd proxy
        echo ------------ slither version check
        slither --version
        echo ------------ slither steo 1
        slither . --filter-path openzeppelin-solidity,@openzeppelin/contracts/ || true            
        echo ------------ slither steo 2
        slither . --filter-path openzeppelin-solidity,@openzeppelin/contracts/ --exclude-informational --exclude reentrancy-events,constant-function,calls-loop,reentrancy-benign,pragma,assembly,blank-lines,timestamp,external-function,constable-states,locked-ether,solc-version,too-many-digits,shadowing-state,shadowing-local,uninitialized-state || travis_terminate 7
        cd ..

    - name: PROXY - LINT-2
      run: |
        cd proxy
        yarn tslint #|| travis_terminate 2            
        cd ..

    - name: PROXY - GENERATE
      run: |
        cd proxy
        yarn generate
        bash ./scripts/remove.sh
        cd ..

    - name: PROXY - TEST
      run: |
        cd proxy
        RUNNING_NETWORK=test bash ./scripts/prepareSkaleManagerComponents.sh
        yarn test || travis_terminate 3
        cd ..

    - name: TEST - PY - PRE-RUN
      run: |
        cd test
        python3 ../scripts/config_from_accounts.py accounts.json config.json
        pip3 install -r requirements.txt
        cd ..

    - name: TEST - PY - RUN
      run: |
        cd test
        python3 test.py || travis_terminate 6
        cd ..

    - name: PROXY - COVERAGE
      run: |
        cd proxy
        npx buidler coverage --solcoverjs .solcover.js || travis_terminate 4
        cat coverage/lcov.info | npx codecov
        cd ..

