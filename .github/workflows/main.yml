# This is a basic workflow to help you get started with Actions

name: Build and test

# Controls when the action will run. Triggers the workflow on push or pull request 
# events but only for the master branch
on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: SYSTEM VERSION CHECKS
      run: |
        echo ------------ unix name - a
        uname -a || true
        echo ------------ unix name - r
        uname -r || true
        echo ------------ lsb
        lsb_release -a || true
        echo ------------ hostnamectl
        hostnamectl || true
        echo ------------ /etc/os-release
        cat /etc/os-release || true
        echo ------------ /proc/version
        cat /proc/version || true
        echo ------------ lscpu
        lscpu || true
        echo ------------ lsusb
        sudo apt-get install usbutils || true &> /dev/null
        lsusb -t || true

    - name: NODE 10.x
      run: |
        echo ------------ uninstall
        sudo apt-get remove nodejs || true
        echo ------------ force remove
        sudo rm -f /usr/local/bin/node || true
        sudo rm -f /usr/local/bin/npm || true
        sudo rm -f /usr/bin/node || true
        sudo rm -f /usr/bin/npm || true
        echo ------------ download
        curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -
        echo ------------ install
        sudo apt-get install nodejs
        echo ------------ node version check
        which node || echo "----> Looks like node was not installed"
        node --version
        echo ------------ npm version check
        which npm || echo "----> Looks like npm was not installed"
        npm --version

    # - name: INSTALL PREREQUISITES - PY
    #   run: |
    #     echo ------------ py3 installs
    #     sudo apt-get install python3-pip python3-setuptools python3-dev
    #     echo ------------ py3 wheel - apt
    #     sudo apt-get install python3-wheel
    #     echo ------------ py3 wheel - pip
    #     pip3 install wheel
    #     echo ------------ slither analyzer install
    #     pip3 install slither-analyzer
    #     echo ------------ slither version check - after install
    #     which slither || echo "----> Looks like slither was not installed"
    #     slither --version

    - name: INSTALL PREREQUISITES - PROXY - COPY SCRIPTS
      run: |
        cd proxy
        bash ./scripts/copy.sh
        cd ..

    - name: INSTALL PREREQUISITES - PROXY - PACKAGES
      run: |
        cd proxy
        echo ------------ yarn pass
        yarn install
        echo ------------ npx version check
        which npx || echo "----> Looks like npx was not installed"
        npx --version
        echo ------------ buidler version check
        npx buidler --version
        cd ..

    - name: INSTALL PREREQUISITES - AGENT - PACKAGES
      run: |
        cd agent 
        npm install
        cd ..

    - name: INSTALL PREREQUISITES - SKALE-IMA - PACKAGES
      run: |
        cd npms/skale-ima
        npm install
        cd ../..

    # - name: START BACKGROUND GANACHE
    #   run: |
    #     echo ------------ ganache-cli version check
    #     which ganache-cli || echo "----> Looks like ganache-cli was not installed"
    #     ganache-cli --version
    #     echo ------------ ganache-cli startup
    #     npx ganache-cli --gasLimit 8000000 --quiet --acctKeys ../test/accounts.json &

    - name: PROXY - LINT
      run: |
        cd proxy
        yarn lint #|| travis_terminate 1
        cd ..

    # - name: PROXY - SLITHER
    #   run: |
    #     cd proxy
    #     echo ------------ slither version check - before run
    #     which slither || echo "----> Looks like slither was not installed"
    #     slither --version
    #     echo ------------ slither steo 1
    #     slither . --filter-path openzeppelin-solidity,@openzeppelin/contracts/ || true            
    #     echo ------------ slither steo 2
    #     slither . --filter-path openzeppelin-solidity,@openzeppelin/contracts/ --exclude-informational --exclude reentrancy-events,constant-function,calls-loop,reentrancy-benign,pragma,assembly,blank-lines,timestamp,external-function,constable-states,locked-ether,solc-version,too-many-digits,shadowing-state,shadowing-local,uninitialized-state || travis_terminate 7
    #     cd ..

    - name: PROXY - LINT-2
      run: |
        cd proxy
        yarn tslint #|| travis_terminate 2            
        cd ..

    - name: PROXY - GENERATE
      run: |
        cd proxy
        yarn generate
        bash ./scripts/remove.sh
        cd ..

    - name: PROXY - TEST
      run: |
        echo ------------ ganache-cli version check
        which ganache-cli || echo "----> Looks like ganache-cli was not installed"
        ganache-cli --version
        echo ------------ ganache-cli startup
        npx ganache-cli --gasLimit 8000000 --quiet --acctKeys ../test/accounts.json &
        echo ------------ run yarn test
        cd proxy
        RUNNING_NETWORK=test bash ./scripts/prepareSkaleManagerComponents.sh
        yarn test #|| travis_terminate 3
        cd ..
        echo ------------ cleanup
        killall npx || true

    - name: TEST - PY - PRE-RUN
      run: |
        cd test
        python3 ../scripts/config_from_accounts.py accounts.json config.json
        pip3 install -r requirements.txt
        cd ..

    - name: TEST - PY - RUN
      run: |
        cd test
        python3 test.py #|| travis_terminate 6
        cd ..

    - name: PROXY - COVERAGE
      run: |
        cd proxy
        npx buidler coverage --solcoverjs .solcover.js #|| travis_terminate 4
        cat coverage/lcov.info | npx codecov
        cd ..

